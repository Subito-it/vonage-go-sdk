/*
 * Nexmo Verify API
 *
 * The Verify API helps you to implement 2FA (two-factor authentication) in your applications. This is useful for:  * Protecting against spam, by preventing spammers from creating multiple accounts * Monitoring suspicious activity, by forcing an account user to verify ownership of a number * Ensuring that you can reach your users at any time because you have their correct phone number More information is available at <https://developer.nexmo.com/verify>
 *
 * API version: 1.1.3
 * Contact: devrel@nexmo.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package verify

// VerifyRequest struct for VerifyRequest
type VerifyRequest struct {
	// You can find your API key in your [account dashboard](https://dashboard.nexmo.com)
	ApiKey string `json:"api_key"`
	// You can find your API secret in your [account dashboard](https://dashboard.nexmo.com)
	ApiSecret string `json:"api_secret"`
	// The mobile or landline phone number to verify. Unless you are setting `country` explicitly, this number must be in [E.164](https://en.wikipedia.org/wiki/E.164) format.
	Number string `json:"number"`
	// If you do not provide `number` in international format or you are not sure if `number` is correctly formatted, specify the two-character country code in `country`. Verify will then format the number for you.
	Country string `json:"country,omitempty"`
	// An 18-character alphanumeric string you can use to personalize the verification request SMS body, to help users identify your company or application name. For example: \"Your `Acme Inc` PIN is ...\"
	Brand string `json:"brand"`
	// An 11-character alphanumeric string that represents the [identity of the sender](https://developer.nexmo.com/messaging/sms/guides/custom-sender-id) of the verification request. Depending on the destination of the phone number you are sending the verification SMS to, restrictions might apply.
	SenderId string `json:"sender_id,omitempty"`
	// The length of the verification code.
	CodeLength int32 `json:"code_length,omitempty"`
	// By default, the SMS or text-to-speech (TTS) message is generated in the locale that matches the `number`. For example, the text message or TTS message for a `33*` number is sent in French. Use this parameter to explicitly control the language used for the Verify request. A list of languages is available: <https://developer.nexmo.com/verify/guides/verify-languages>
	Lg string `json:"lg,omitempty"`
	// How long the generated verification code is valid for, in seconds. When you specify both `pin_expiry` and `next_event_wait` then `pin_expiry` must be an integer multiple of `next_event_wait` otherwise `pin_expiry` is defaulted to equal next_event_wait. See [changing the event timings](https://developer.nexmo.com/verify/guides/changing-default-timings).
	PinExpiry int32 `json:"pin_expiry,omitempty"`
	// Specifies the wait time in seconds between attempts to deliver the verification code.
	NextEventWait int32 `json:"next_event_wait,omitempty"`
	// Selects the predefined sequence of SMS and TTS (Text To Speech) actions to use in order to convey the PIN to your user. For example, an id of 1 identifies the workflow SMS - TTS - TTS. For a list of all workflows and their associated ids, please visit the [developer portal](https://developer.nexmo.com/verify/guides/workflows-and-events).
	WorkflowId int32 `json:"workflow_id,omitempty"`
}
